using System.IO;

namespace TypeD.Code
{
    public abstract class TypeDCodalyzer : Codalyzer
    {
        // Properties
        protected CodeFile TypeDFile { get; set; }

        // Constructors
        public TypeDCodalyzer() : base()
        {
            PartialClass = true;
            TypeDFile = new CodeFile();
            TypeDFile.AutoGeneratedFile = true;
        }

        public override void Init()
        {
            Writer.TargetFile = TypeDFile;
            InitTypeDClass();
            TypeDFile.FilePath = FilePathTypeD();
            base.Init();
        }

        protected abstract void InitTypeDClass();

        // Functions
        public override void Generate()
        {
            base.Generate();

            Writer.TargetFile = TypeDFile;
            WriteFile();
        }


        public override void Save()
        {
            base.Save();

            if (!TypeDFile.AutoGeneratedFile && File.Exists(FilePathTypeD()))
            {
                return;
            }

            TypeDFile.Save();
        }

        public string FilePathTypeD()
        {
            return Path.Combine(Project.ProjectComponentCodePath, Namespace.Replace(".", @"\\"), $"{ClassName}.typed.cs");
        }
    }
}
